package  {	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.MouseEvent;	import flash.events.KeyboardEvent;	import flash.events.Event;	/*	Class LesCo 		Elle permet de créé un module qui affiche les joueurs connecté sur la 		room	*/	public class LesCo  extends Sprite{		public var fenetre:Fenetre;		public var reduit:Boolean=false; // indique si la fenetre est déuite ou non 		public var pseudo:Array = new Array(); // Liste des pseudo connecté dans la salle		public var movee:Boolean=false;				public function LesCo(f:Fenetre){			this.fenetre=f;			fond.tf.multiline=true; //Permet de mettre le text sur plusieurs lignes			fond.tf.wordWrap = true;//Permet de mettre les mots a la ligne lorsqu'ils sont trop long			this.x=700; //Dimention de la fenetre			this.y=230;		}				public function afficherThis(){			fond.mov.addEventListener(MouseEvent.CLICK , onClick); //Ecouteur de déplacement de la fenetre			fond.mov.addEventListener(MouseEvent.MOUSE_UP , onDeclick);			fond.reduire.addEventListener(MouseEvent.CLICK , reduirAgrandir); //Ecouteur de bouton pour réduire la fenetre			fenetre.addChild(this);			fenetre.addEventListener(MouseEvent.MOUSE_MOVE, movThis);		}				public function effacerThis(){			fenetre.removeChild(this);			fenetre.removeEventListener(MouseEvent.MOUSE_MOVE, movThis);			fond.reduire.removeEventListener(MouseEvent.CLICK , reduirAgrandir); //Ecouteur de bouton pour réduire la fenetre			fond.mov.removeEventListener(MouseEvent.MOUSE_DOWN , onClick); //Ecouteur de déplacement de la fenetre			fond.mov.removeEventListener(MouseEvent.MOUSE_UP , onDeclick);			fenetre.lesCo=null;		}				//Gere le déplacement graphique de la fenetre 		public function movThis(evt:MouseEvent){			//Si le client clique sur le Bouton			if(movee){				fenetre.addChild(this);				this.fond.x = evt.stageX - this.x - fond.mov.width/2 ;				this.fond.y = evt.stageY - this.y - fond.mov.height/2 -5 ;			}		}				public function onClick(evt:MouseEvent){			movee=true;		}		public function onDeclick(evt:MouseEvent){			movee=false;		}				public function addP(s:String){			pseudo.push(s);			if(fond.tf != null){				refrechP();			}		}				//Permet de suprimer un pseudo de la fenetre		public function suppP(s:String){			for( var i =0 ; i< pseudo.length ; i++){				if(pseudo[i] == s){					pseudo[i]=null;					pseudo.splice(i,1);				}			}			if(fond.tf != null){				refrechP();			}		}		//Permet de rafrechir la liste des pseudos		public function refrechP(){			fond.tf.text="";			for(var i =0;i<pseudo.length;i++){				fond.tf.text+=pseudo[i]+ "\n";			}		}				//Gere la reduction/agrandissement de la fenetre des Connecté		public function reduirAgrandir(evt:MouseEvent){			if(reduit){				fond.gotoAndPlay(1);				refrechP();				fond.tf.scrollV=fond.tf.maxScrollV;				reduit=false;			}else{				fond.gotoAndPlay(2);				reduit=true;			}		}	}	}