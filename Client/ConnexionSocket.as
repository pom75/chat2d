package {	import flash.display.Sprite;	import flash.display.MovieClip;	import flash.net.XMLSocket;	import flash.display.MovieClip;	import fl.motion.Color;	import flash.events.IOErrorEvent;	import flash.events.Event;	import flash.events.DataEvent;	import flash.events.MouseEvent;	import flash.events.IOErrorEvent;	import flash.events.SecurityErrorEvent;	import flash.events.UncaughtErrorEvents;	public class ConnexionSocket	{		//Variable permettant de savoir si le client est connecté		private var bConnected:Boolean;		//Pour cibler vers la scène accecible uniquement dans le paktage		internal var scene:MovieClip;		//Instance de la connection		private var connexion:XMLSocket = new XMLSocket();		// Autentification		public var test:Boolean;		// Id du client		public var idClient:Number;		//pseudo		public var pseudo:String;		//mpd		public var mdp:String;		//bool		public var teeest:Boolean = true;		//Constructeur :		public function ConnexionSocket(scene :MovieClip,Host:String,Port:Number,pseudo:String,mdp:String)		{			this.pseudo = pseudo;			this.mdp = mdp;						//connexion.addEventListener(SecurityErrorEvent.SECURITY_ERROR, connexionN2);			//Connexion non etablie			connexion.addEventListener(IOErrorEvent.IO_ERROR, connexionN1);			//CONECTION AU SOCKET REUSSI			connexion.addEventListener(Event.CONNECT, connexionR);			//Conection au socket interrompu;			connexion.addEventListener(Event.CLOSE, connexionC);			//Reception de donné;			connexion.addEventListener(DataEvent.DATA, traitementData);			//On stoque la référence de la scène :;			this.scene = scene;			//On établie la conection au server						try{			connexion.connect(Host,Port);			}catch(error:Error){				scene.gotoAndStop(1);			}		}		public function getCo():XMLSocket		{			return connexion;		}		//Affcihe sur le client lorsque la conexion est établie		public function connexionR(Evt:Event):void		{			// On envoie au serveur les information du client			this.sendText("TEST="+pseudo+"="+mdp+"=");			teeest=true;		}		//Affiche sur le client lorsque la conexion est perdu		public function connexionC(Evt:Event):void		{			if (teeest)			{				scene.gotoAndStop(1);				scene.accueil.setError("Le Serveur vien d'etre couper , veuillez pacienter quelques minute avant de vous reconnecté");				scene.mainFenetre.effacerThis();				scene.accueil.afficherThis();			}		}				public function connexionN1(e:IOErrorEvent):void		{				scene.gotoAndStop(1);				scene.accueil.setError("Serveur Off-Line");				scene.mainFenetre.effacerThis();				scene.accueil.afficherThis();		}				public function connexionN2(e:SecurityErrorEvent):void		{				scene.gotoAndStop(1);				scene.accueil.setError("Serveur Off-Line");				scene.mainFenetre.effacerThis();				scene.accueil.afficherThis();		}		public function traitementData(Evt:DataEvent)		{			trace(Evt.data);			//protocole:			//séparation Des valeur par des =			//TEST bool id pseudo xpos ypos grade (Reçoit le test de la connexion login clien  )			//NEWONE id pseudo xpos ypos grade (créé un nouvelle utilisateur et l'affiche)			//LOSTONE id (Suprime cette personne)			//MESS id pseudo message (reception d'un message)			//DEPLA  id x y (déplacement d'un personnage)			//tableau De recpetion de données			var tabData:Array = Evt.data.split("=");			//Reponse a la demande de connexion si aucune erreur			if (tabData[0] == "TEST")			{				scene.gotoAndPlay(3);				//Id / Pseudo / X / Y / Grade 				scene.mainFenetre.id = Number(tabData[1]);				scene.mainFenetre.pseudo = tabData[2];				scene.mainFenetre.xx = Number(tabData[3]);				scene.mainFenetre.yy = Number(tabData[4]);				scene.mainFenetre.grade = Number(tabData[5]);			}			//Liste des diférentes erreurs						else if (tabData[0] == "ERROR")			{								if (Number(tabData[1]) == 0)				{					teeest = false;					scene.gotoAndStop(1);					scene.mainFenetre.effacerThis();					scene.accueil.setError("Pseudo ou mot de passe incorrecte !");					scene.accueil.afficherThis();				}				else if (Number(tabData[1]) == 1)				{					teeest = false;					scene.gotoAndStop(1);					scene.mainFenetre.effacerThis();					scene.accueil.setError("Ce compte est déja connecté sur le tchat !");					scene.accueil.afficherThis();				}				else if (Number(tabData[1]) == 2)				{					teeest = false;					scene.gotoAndStop(1);					scene.mainFenetre.effacerThis();					scene.accueil.setError("Connecté perdu , vous avez été Kické !(Serveur)");					scene.accueil.afficherThis();									}				else if (Number(tabData[1]) == 3)				{					teeest = false;					scene.gotoAndStop(1);					scene.mainFenetre.effacerThis();					scene.accueil.setError("Connecté perdu , vous avez été Kické !(Flood)");					scene.accueil.afficherThis();									}			}						//Connexion d'un joueur			else if (tabData[0] == "NEWONE")			{				scene.mainFenetre.currentRoom.addPre(Number(tabData[1]),tabData[2],Number(tabData[3]),Number(tabData[4]),Number(tabData[5]));			}			//Deconnexion d'un joueur			else if (tabData[0] == "LOSTONE")			{				scene.mainFenetre.currentRoom.removeClient(Number(tabData[1]));			}			//Deplacement d'un joueur			else if (tabData[0] == "DEPLA")			{				scene.mainFenetre.currentRoom.deplacer_e(Number(tabData[1]),Number(tabData[2]),Number(tabData[3]));			}			//Message d'un joueur			else if (tabData[0] == "MESS")			{				//FOrmation du message ( Pseudo : message)				var s:String = tabData[2] + ": " + tabData[3];				//ON ajoute les charactere entrer				for(var i:Number = 4 ; i< tabData.length ; i++){					s+="="+tabData[i];				}				var doc:XML = new XML(s);				doc.ignoreWhite = true;				onReceiveXml(doc);			}			//Change le joueur dans la room			else if (tabData[0] == "CROOM")			{				scene.mainFenetre.goToRoom(tabData[1]);			}					}		//converti le message a envoyer en XML		public function sendText(sText:String)		{			var xText:XML = new XML(sText);			sendXML(xText);		}		// envois au server un message		public function sendXML(xData:XML)		{			connexion.send(xData);		}		//Reception d'un message de tchat		public function onReceiveXml(xXml:XML)		{			scene.mainFenetre.dialBox.addT(xXml);		}				//Envois les login au server 		//Partie a effacer ?		public function sendMPD(pseudo:String, passe:String)		{			if (scene.txt_pseudo.text.length > 0)			{				this.sendText("TEST=" + escape(pseudo) + "=" + escape(passe));			}		}	}}